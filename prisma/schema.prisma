datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

enum Status {
  PENDING
  ACCEPTED
  DECLINED
}

model User {
  id             String          @id @default(cuid())
  name           String?
  email          String?         @unique
  emailVerified  DateTime?
  image          String?
  password       String?
  accounts       Account[]
  reviews        Review[]
  participations Participation[]
  dugnads        Dugnad[]        @relation("UserDugnad")
  friends        User[]          @relation("UserFriends")
  befriended     User[]          @relation("UserFriends")
}

model Dugnad {
  id           Int             @id @default(autoincrement())
  ownerId      String
  image        String?
  title        String
  area         String
  date         DateTime
  info         String
  participants Participation[]
  categories   Category[]
  reviews      Review[]

  owner User @relation(fields: [ownerId], references: [id], name: "UserDugnad")
}

model Participation {
  id       Int    @id @default(autoincrement())
  userId   String
  dugnadId Int
  status   Status

  user   User   @relation(fields: [userId], references: [id])
  dugnad Dugnad @relation(fields: [dugnadId], references: [id])
}

model Category {
  id      Int      @id @default(autoincrement())
  name    String @unique
  dugnads Dugnad[]
}

model Review {
  id       Int    @id @default(autoincrement())
  writerId String
  dugnadId Int
  title    String
  text     String
  rating   Int

  writer User   @relation(fields: [writerId], references: id)
  dugnad Dugnad @relation(fields: [dugnadId], references: id)
}
